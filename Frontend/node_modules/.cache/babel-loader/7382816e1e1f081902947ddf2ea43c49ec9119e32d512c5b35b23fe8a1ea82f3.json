{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      stripeAPIToken: process.env.VUE_APP_STRIPETOKEN,\n      stripe: '',\n      token: null,\n      sessionId: null,\n      checkoutBodyArray: []\n    };\n  },\n  name: 'Checkout',\n  props: ['baseURL'],\n  methods: {\n    /*\n      Configures Stripe by setting up the elements and\n      creating the card element.\n    */\n    configureStripe() {},\n    getAllItems() {\n      axios.get(`${this.baseURL}cart/?token=${this.token}`).then(response => {\n        if (response.status == 200) {\n          let products = response.data;\n          let len = Object.keys(products.cartItems).length;\n          for (let i = 0; i < len; i++) this.checkoutBodyArray.push({\n            imageUrl: products.cartItems[i].product.imageURL,\n            productName: products.cartItems[i].product.name,\n            quantity: products.cartItems[i].quantity,\n            price: products.cartItems[i].product.price,\n            productId: products.cartItems[i].product.id,\n            userId: products.cartItems[i].userId\n          });\n        }\n      }, err => {\n        console.log(err);\n      });\n    },\n    goToCheckout() {\n      axios.post(this.baseURL + 'order/create-checkout-session', this.checkoutBodyArray).then(response => {\n        localStorage.setItem('sessionId', response.data.sessionId);\n        return response.data;\n      }).then(session => {\n        return this.stripe.redirectToCheckout({\n          sessionId: session.sessionId\n        });\n      });\n    }\n  },\n  mounted() {\n    // get the token\n    this.token = localStorage.getItem('token');\n    // get all the cart items\n    this.stripe = Stripe(this.stripeAPIToken);\n    this.getAllItems();\n  }\n};","map":{"version":3,"mappings":";AAaA,eAAe;EACbA,IAAI,GAAG;IACL,OAAO;MACLC,cAAc,EAAEC,OAAO,CAACC,GAAG,CAACC,mBAAmB;MAC/CC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,IAAI;MACfC,iBAAiB,EAAE;IACrB,CAAC;EACH,CAAC;EAEDC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,OAAO,EAAE;IACP;;;;IAIAC,eAAe,GAAG,CAAC,CAAC;IAEpBC,WAAW,GAAG;MACZC,KAAK,CAACC,GAAG,CAAE,GAAE,IAAI,CAACC,OAAQ,eAAc,IAAI,CAACV,KAAM,EAAC,CAAC,CAACW,IAAI,CACvDC,QAAQ,IAAK;QACZ,IAAIA,QAAQ,CAACC,MAAK,IAAK,GAAG,EAAE;UAC1B,IAAIC,QAAO,GAAIF,QAAQ,CAAClB,IAAI;UAC5B,IAAIqB,GAAE,GAAIC,MAAM,CAACC,IAAI,CAACH,QAAQ,CAACI,SAAS,CAAC,CAACC,MAAM;UAChD,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAIL,GAAG,EAAEK,CAAC,EAAE,EAC1B,IAAI,CAAClB,iBAAiB,CAACmB,IAAI,CAAC;YAC1BC,QAAQ,EAAER,QAAQ,CAACI,SAAS,CAACE,CAAC,CAAC,CAACG,OAAO,CAACC,QAAQ;YAChDC,WAAW,EAAEX,QAAQ,CAACI,SAAS,CAACE,CAAC,CAAC,CAACG,OAAO,CAACpB,IAAI;YAC/CuB,QAAQ,EAAEZ,QAAQ,CAACI,SAAS,CAACE,CAAC,CAAC,CAACM,QAAQ;YACxCC,KAAK,EAAEb,QAAQ,CAACI,SAAS,CAACE,CAAC,CAAC,CAACG,OAAO,CAACI,KAAK;YAC1CC,SAAS,EAAEd,QAAQ,CAACI,SAAS,CAACE,CAAC,CAAC,CAACG,OAAO,CAACM,EAAE;YAC3CC,MAAM,EAAEhB,QAAQ,CAACI,SAAS,CAACE,CAAC,CAAC,CAACU;UAChC,CAAC,CAAC;QACN;MACF,CAAC,EACAC,GAAG,IAAK;QACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,EACD;IACH,CAAC;IAEDG,YAAY,GAAG;MACb1B,KAAI,CACD2B,IAAI,CACH,IAAI,CAACzB,OAAM,GAAI,+BAA+B,EAC9C,IAAI,CAACR,iBAAgB,CACvB,CACCS,IAAI,CAAEC,QAAQ,IAAK;QAClBwB,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEzB,QAAQ,CAAClB,IAAI,CAACO,SAAS,CAAC;QAC1D,OAAOW,QAAQ,CAAClB,IAAI;MACtB,CAAC,EACAiB,IAAI,CAAE2B,OAAO,IAAK;QACjB,OAAO,IAAI,CAACvC,MAAM,CAACwC,kBAAkB,CAAC;UACpCtC,SAAS,EAAEqC,OAAO,CAACrC;QACrB,CAAC,CAAC;MACJ,CAAC,CAAC;IACN;EACF,CAAC;EACDuC,OAAO,GAAG;IACR;IACA,IAAI,CAACxC,KAAI,GAAIoC,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;IAC1C;IACA,IAAI,CAAC1C,MAAK,GAAI2C,MAAM,CAAC,IAAI,CAAC/C,cAAc,CAAC;IACzC,IAAI,CAACY,WAAW,EAAE;EACpB;AACF,CAAC","names":["data","stripeAPIToken","process","env","VUE_APP_STRIPETOKEN","stripe","token","sessionId","checkoutBodyArray","name","props","methods","configureStripe","getAllItems","axios","get","baseURL","then","response","status","products","len","Object","keys","cartItems","length","i","push","imageUrl","product","imageURL","productName","quantity","price","productId","id","userId","err","console","log","goToCheckout","post","localStorage","setItem","session","redirectToCheckout","mounted","getItem","Stripe"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\vue\\ecommerce-ui\\src\\views\\Checkout\\Checkout.vue"],"sourcesContent":["<template>\n  <div class=\"div_class\">\n    <h3>You will be redirected to payment page</h3>\n    <button\n      class=\"checkout_button\"\n      id=\"proceed-to-checkout\"\n      @click=\"goToCheckout()\"\n    >\n      Make payment\n    </button>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      stripeAPIToken: process.env.VUE_APP_STRIPETOKEN,\n      stripe: '',\n      token: null,\n      sessionId: null,\n      checkoutBodyArray: [],\n    };\n  },\n\n  name: 'Checkout',\n  props: ['baseURL'],\n  methods: {\n    /*\n      Configures Stripe by setting up the elements and\n      creating the card element.\n    */\n    configureStripe() {},\n\n    getAllItems() {\n      axios.get(`${this.baseURL}cart/?token=${this.token}`).then(\n        (response) => {\n          if (response.status == 200) {\n            let products = response.data;\n            let len = Object.keys(products.cartItems).length;\n            for (let i = 0; i < len; i++)\n              this.checkoutBodyArray.push({\n                imageUrl: products.cartItems[i].product.imageURL,\n                productName: products.cartItems[i].product.name,\n                quantity: products.cartItems[i].quantity,\n                price: products.cartItems[i].product.price,\n                productId: products.cartItems[i].product.id,\n                userId: products.cartItems[i].userId,\n              });\n          }\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    },\n\n    goToCheckout() {\n      axios\n        .post(\n          this.baseURL + 'order/create-checkout-session',\n          this.checkoutBodyArray\n        )\n        .then((response) => {\n          localStorage.setItem('sessionId', response.data.sessionId);\n          return response.data;\n        })\n        .then((session) => {\n          return this.stripe.redirectToCheckout({\n            sessionId: session.sessionId,\n          });\n        });\n    },\n  },\n  mounted() {\n    // get the token\n    this.token = localStorage.getItem('token');\n    // get all the cart items\n    this.stripe = Stripe(this.stripeAPIToken);\n    this.getAllItems();\n  },\n};\n</script>\n\n<style>\n.alert {\n  width: 50%;\n}\n\n.div_class {\n  text-align: center;\n  padding-top: 10%;\n}\n\n.checkout_button {\n  background-color: #5d3dec;\n  border: none;\n  color: white;\n  padding: 15px 30px;\n  margin: 4%;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 15px;\n  font-weight: bold;\n  border-radius: 15px;\n}\n\n.checkout_button:focus {\n  outline: none;\n  box-shadow: none;\n}\n\n.checkout_button:disabled {\n  background-color: #9b86f7;\n  border: none;\n  color: white;\n  margin-left: 15%;\n  padding: 15px 30px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 15px;\n  font-weight: bold;\n  border-radius: 15px;\n  cursor: not-allowed;\n}\n@media (max-width:400px) {\n  .div_class {\n    text-align: center;\n    padding-top: 30%;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}