{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7552bbd4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-12 text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"pt-3\"\n}, \"Add a new Image\")])], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-3\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"col-md-6 px-5 px-md-0 pt-5\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"myfile\"\n}, \"Select image :\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-3\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"myfile\",\n    class: \"form-control-file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileSelected && $options.onFileSelected(...args))\n  }, null, 32 /* HYDRATE_EVENTS */)]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-info\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.onUpload && $options.onUpload(...args))\n  }, \"Upload\")]), _hoisted_8])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEACpBC,oBAIM;EAJDD,KAAK,EAAC;AAAK,iBACdC,oBAEM;EAFDD,KAAK,EAAC;AAAoB,iBAC7BC,oBAAqC;EAAjCD,KAAK,EAAC;AAAM,GAAC,iBAAe;;EAI/BA,KAAK,EAAC;AAAK;gEACdC,oBAAyB;EAApBD,KAAK,EAAC;AAAO;;EACbA,KAAK,EAAC;AAA4B;;EAChCA,KAAK,EAAC;AAAY;gEACrBC,oBAA0C;EAAnCC,GAAG,EAAC;AAAQ,GAAC,gBAAc;gEAKtCD,oBAAyB;EAApBD,KAAK,EAAC;AAAO;;;uBAhBtBG,oBAkBM,OAlBNC,UAkBM,GAjBJC,UAIM,EAENJ,oBAUM,OAVNK,UAUM,GATJC,UAAyB,EACzBN,oBAMM,OANNO,UAMM,GALJP,oBAGM,OAHNQ,UAGM,GAFJC,UAA0C,EAC1CT,oBAAkF;IAA3EU,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,QAAQ;IAACZ,KAAK,EAAC,mBAAmB;IAAEa,QAAM,yCAAEC,2DAAc;uCAElFb,oBAA4E;IAApEU,IAAI,EAAC,QAAQ;IAACX,KAAK,EAAC,cAAc;IAAEe,OAAK,yCAAED,+CAAQ;KAAE,QAAM,KAErEE,UAAyB","names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","type","id","onChange","$options","onClick","_hoisted_8"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\vue\\ecommerce-ui\\src\\views\\Admin\\AddImage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12 text-center\">\n        <h4 class=\"pt-3\">Add a new Image</h4>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-3\"></div>\n      <div class=\"col-md-6 px-5 px-md-0 pt-5\">\n        <div class=\"form-group\">\n          <label for=\"myfile\">Select image :</label>\n          <input type=\"file\" id=\"myfile\" class=\"form-control-file\" @change=\"onFileSelected\">\n        </div>\n        <button type=\"button\" class=\"btn btn-info\" @click=\"onUpload\">Upload</button>\n      </div>\n      <div class=\"col-3\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n    data(){\n        return {\n            selectedFile : null\n        }\n    },\n    props : [\"baseURL\"],\n    methods : {\n        onFileSelected(event){\n            //this will always update the selected file whenever user changes files\n            this.selectedFile = event.target.files[0];\n        },\n        async onUpload(){\n            if(!this.selectedFile) {\n                swal({\n                    text: \"Select a file first\",\n                    icon: \"warning\",\n                    closeOnClickOutside: false,\n                });\n                return;\n            }\n            if(this.selectedFile.type !== \"image/jpeg\" && this.selectedFile.type !== \"image/png\" &&\n               this.selectedFile.type !== \"image/jpg\") {\n                //file format is not correct\n                swal({\n                    text: \"Select a image/jpeg file!\",\n                    icon: \"error\",\n                    closeOnClickOutside: false,\n                });\n                return;\n            }\n            const formData = new FormData();\n            formData.append('file', this.selectedFile);\n\n            await axios({\n                method: 'post',\n                url: this.baseURL + \"fileUpload/\",\n                data : formData,\n            })\n            .then(res => {\n                this.$router.push({name : \"Gallery\"});\n                swal({\n                    text: \"Image Added Successfully!\",\n                    icon: \"success\",\n                    closeOnClickOutside: false,\n                });\n            })\n            .catch(err => console.log(err))\n        }\n    },\n    mounted() {\n        if (!localStorage.getItem('token')) {\n            this.$router.push({name : 'Signin'});\n        }\n    }\n}\n</script>\n\n<style scoped>\nh4 {\n  font-family: 'Roboto', sans-serif;\n  color: #484848;\n  font-weight: 700;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}