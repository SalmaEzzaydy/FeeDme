{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"min-height\": \"60vh\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_Footer = _resolveComponent(\"Footer\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [!['Signup', 'Signin'].includes(_ctx.$route.name) ? (_openBlock(), _createBlock(_component_Navbar, {\n    key: 0,\n    cartCount: $data.cartCount,\n    onResetCartCount: $options.resetCartCount\n  }, null, 8 /* PROPS */, [\"cartCount\", \"onResetCartCount\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_1, [$data.products && $data.categories ? (_openBlock(), _createBlock(_component_router_view, {\n    key: 0,\n    baseURL: $data.baseURL,\n    products: $data.products,\n    categories: $data.categories,\n    onFetchData: $options.fetchData\n  }, null, 8 /* PROPS */, [\"baseURL\", \"products\", \"categories\", \"onFetchData\"])) : _createCommentVNode(\"v-if\", true)]), !['Signup', 'Signin'].includes(_ctx.$route.name) ? (_openBlock(), _createBlock(_component_Footer, {\n    key: 1\n  })) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAMOA,KAAwB,EAAxB;IAAA;EAAA;AAAwB;;;;;mFAFCC,QAAQ,CAACC,WAAM,CAACC,IAAI,mBAHlDC,aAIEC;;IAHCC,SAAS,EAAEC,eAAS;IACpBC,gBAAc,EAAEC;mGAGnBC,oBASM,OATNC,UASM,GAPIJ,cAAQ,IAAIA,gBAAU,kBAD9BH,aAOcQ;;IALXC,OAAO,EAAEN,aAAO;IAChBO,QAAQ,EAAEP,cAAQ;IAClBQ,UAAU,EAAER,gBAAU;IACtBS,WAAS,EAAEP;8IAIoBR,QAAQ,CAACC,WAAM,CAACC,IAAI,mBAAxDC,aAA6Da;IAAAC;EAAA","names":["style","includes","_ctx","name","_createBlock","_component_Navbar","cartCount","$data","onResetCartCount","$options","_createElementVNode","_hoisted_1","_component_router_view","baseURL","products","categories","onFetchData","_component_Footer","key"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\vue\\ecommerce-ui\\src\\App.vue"],"sourcesContent":["<template>\n  <Navbar\n    :cartCount=\"cartCount\"\n    @resetCartCount=\"resetCartCount\"\n    v-if=\"!['Signup', 'Signin'].includes($route.name)\"\n  />\n  <div style=\"min-height: 60vh\">\n    <router-view\n      v-if=\"products && categories\"\n      :baseURL=\"baseURL\"\n      :products=\"products\"\n      :categories=\"categories\"\n      @fetchData=\"fetchData\"\n    >\n    </router-view>\n  </div>\n  <Footer v-if=\"!['Signup', 'Signin'].includes($route.name)\" />\n</template>\n\n<script>\nimport Navbar from './components/Navbar.vue';\nimport Footer from './components/Footer.vue';\nexport default {\n  data() {\n    return {\n      //baseURL: 'https://limitless-lake-55070.herokuapp.com/',\n      baseURL: \"http://localhost:8080/\",\n      products: null,\n      categories: null,\n      key: 0,\n      token: null,\n      cartCount: 0,\n    };\n  },\n\n  components: { Footer, Navbar },\n  methods: {\n    async fetchData() {\n      // fetch products\n      await axios\n        .get(this.baseURL + 'product/')\n        .then((res) => (this.products = res.data))\n        .catch((err) => console.log(err));\n\n      //fetch categories\n      await axios\n        .get(this.baseURL + 'category/')\n        .then((res) => (this.categories = res.data))\n        .catch((err) => console.log(err));\n\n      //fetch cart items\n      if (this.token) {\n        await axios.get(`${this.baseURL}cart/?token=${this.token}`).then(\n          (response) => {\n            if (response.status == 200) {\n              // update cart\n              this.cartCount = Object.keys(response.data.cartItems).length;\n            }\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n      }\n    },\n    resetCartCount() {\n      this.cartCount = 0;\n    },\n  },\n  mounted() {\n    this.token = localStorage.getItem('token');\n    this.fetchData();\n  },\n};\n</script>\n\n<style>\nhtml {\n  overflow-y: scroll;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}