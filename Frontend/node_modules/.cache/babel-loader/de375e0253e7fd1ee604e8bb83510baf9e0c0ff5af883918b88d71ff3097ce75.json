{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst axios = require('axios');\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      token: null,\n      totalcost: 0\n    };\n  },\n  name: 'Cart',\n  props: ['baseURL'],\n  methods: {\n    isDisabled() {\n      if (this.cartItems.length === 0) {\n        return true;\n      }\n      return false;\n    },\n    // fetch all the items in cart\n    listCartItems() {\n      axios.get(`${this.baseURL}cart/?token=${this.token}`).then(response => {\n        if (response.status == 200) {\n          const result = response.data;\n          // store cartitems and total price in two variables\n          this.cartItems = result.cartItems;\n          this.totalcost = result.totalCost;\n        }\n      }, error => {\n        console.log(error);\n      });\n    },\n    // go to checkout page\n    checkout() {\n      this.$router.push({\n        name: 'Checkout'\n      });\n    },\n    deleteItem(itemId) {\n      axios.delete(`${this.baseURL}cart/delete/${itemId}/?token=${this.token} `).then(response => {\n        if (response.status == 200) {\n          this.$router.go(0);\n        }\n        this.$emit('fetchData');\n      }, error => {\n        console.log(error);\n      });\n    },\n    showDetails(productId) {\n      this.$router.push({\n        name: 'ShowDetails',\n        params: {\n          id: productId\n        }\n      });\n    }\n  },\n  mounted() {\n    this.token = localStorage.getItem('token');\n    this.listCartItems();\n  }\n};","map":{"version":3,"mappings":";AA4EA,MAAMA,KAAI,GAAIC,OAAO,CAAC,OAAO,CAAC;AAC9B,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,OAAO,EAAE;IACPC,UAAU,GAAG;MACX,IAAI,IAAI,CAACN,SAAS,CAACO,MAAK,KAAM,CAAC,EAAE;QAC/B,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC;IACD;IACAC,aAAa,GAAG;MACdX,KAAK,CAACY,GAAG,CAAE,GAAE,IAAI,CAACC,OAAQ,eAAc,IAAI,CAACT,KAAM,EAAC,CAAC,CAACU,IAAI,CACvDC,QAAQ,IAAK;QACZ,IAAIA,QAAQ,CAACC,MAAK,IAAK,GAAG,EAAE;UAC1B,MAAMC,MAAK,GAAIF,QAAQ,CAACb,IAAI;UAC5B;UACA,IAAI,CAACC,SAAQ,GAAIc,MAAM,CAACd,SAAS;UACjC,IAAI,CAACE,SAAQ,GAAIY,MAAM,CAACC,SAAS;QACnC;MACF,CAAC,EACAC,KAAK,IAAK;QACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,EACD;IACH,CAAC;IACD;IACAG,QAAQ,GAAG;MACT,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAElB,IAAI,EAAE;MAAW,CAAC,CAAC;IACzC,CAAC;IACDmB,UAAU,CAACC,MAAM,EAAE;MACjB1B,KAAI,CACD2B,MAAM,CAAE,GAAE,IAAI,CAACd,OAAQ,eAAca,MAAO,WAAU,IAAI,CAACtB,KAAK,GAAG,EACnEU,IAAI,CACFC,QAAQ,IAAK;QACZ,IAAIA,QAAQ,CAACC,MAAK,IAAK,GAAG,EAAE;UAC1B,IAAI,CAACO,OAAO,CAACK,EAAE,CAAC,CAAC,CAAC;QACpB;QACA,IAAI,CAACC,KAAK,CAAC,WAAW,CAAC;MACzB,CAAC,EACAV,KAAK,IAAK;QACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,EACD;IACL,CAAC;IACDW,WAAW,CAACC,SAAS,EAAE;MACrB,IAAI,CAACR,OAAO,CAACC,IAAI,CAAC;QAChBlB,IAAI,EAAE,aAAa;QACnB0B,MAAM,EAAE;UAAEC,EAAE,EAAEF;QAAU;MAC1B,CAAC,CAAC;IACJ;EACF,CAAC;EACDG,OAAO,GAAG;IACR,IAAI,CAAC9B,KAAI,GAAI+B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC1C,IAAI,CAACzB,aAAa,EAAE;EACtB;AACF,CAAC","names":["axios","require","data","cartItems","token","totalcost","name","props","methods","isDisabled","length","listCartItems","get","baseURL","then","response","status","result","totalCost","error","console","log","checkout","$router","push","deleteItem","itemId","delete","go","$emit","showDetails","productId","params","id","mounted","localStorage","getItem"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\vue\\ecommerce-ui\\src\\views\\Cart\\Cart.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12 text-center\">\n        <h3 class=\"pt-3\">Shopping cart</h3>\n      </div>\n    </div>\n    <!--    loop over all the cart items and display one by one-->\n    <div\n      v-for=\"cartItem in cartItems\"\n      :key=\"cartItem.product.id\"\n      class=\"row mt-2 pt-3 justify-content-around\"\n    >\n      <div class=\"col-2\"></div>\n      <!-- display image -->\n      <div class=\"col-md-3 embed-responsive embed-responsive-16by9\">\n        <router-link\n          :to=\"{ name: 'ShowDetails', params: { id: cartItem.product.id } }\"\n        >\n          <img\n            v-bind:src=\"cartItem.product.imageURL\"\n            class=\"w-100 card-img-top embed-responsive-item\"\n          />\n        </router-link>\n      </div>\n      <!-- display product name, quantity and price -->\n      <div class=\"col-md-5 px-3\">\n        <div class=\"card-block px-3\">\n          <h6 class=\"card-title\">\n            <router-link\n              :to=\"{ name: 'ShowDetails', params: { id: cartItem.product.id } }\"\n              >{{ cartItem.product.name }}\n            </router-link>\n          </h6>\n          <p id=\"item-price\" class=\"mb-0 font-weight-bold\">\n            $ {{ cartItem.product.price }} per unit\n          </p>\n          <p id=\"item-quantity\" class=\"mb-0\">\n            Quantity :\n            <input\n              size=\"1\"\n              class=\"p-0 h-25 border-bottom border-top-0 border-left-0 border-right-0\"\n              v-model=\"cartItem.quantity\"\n            />\n          </p>\n          <p id=\"item-total-price\" class=\"mb-0\">\n            Total Price:\n            <span class=\"font-weight-bold\">\n              $ {{ cartItem.product.price * cartItem.quantity }}</span\n            >\n          </p>\n          <br /><a href=\"#\" class=\"text-right\" @click=\"deleteItem(cartItem.id)\"\n            >Remove From Cart</a\n          >\n        </div>\n      </div>\n      <div class=\"col-2\"></div>\n      <div class=\"col-12\"><hr /></div>\n    </div>\n\n    <!-- display total price -->\n    <div class=\"total-cost pt-2 text-right\">\n      <h5>Total : $ {{ totalcost.toFixed(2) }}</h5>\n      <button\n        :disabled=\"isDisabled()\"\n        type=\"button\"\n        class=\"btn btn-primary confirm\"\n        @click=\"checkout\"\n      >\n        Confirm Order\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nconst axios = require('axios');\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      token: null,\n      totalcost: 0,\n    };\n  },\n  name: 'Cart',\n  props: ['baseURL'],\n  methods: {\n    isDisabled() {\n      if (this.cartItems.length === 0) {\n        return true;\n      }\n      return false;\n    },\n    // fetch all the items in cart\n    listCartItems() {\n      axios.get(`${this.baseURL}cart/?token=${this.token}`).then(\n        (response) => {\n          if (response.status == 200) {\n            const result = response.data;\n            // store cartitems and total price in two variables\n            this.cartItems = result.cartItems;\n            this.totalcost = result.totalCost;\n          }\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    },\n    // go to checkout page\n    checkout() {\n      this.$router.push({ name: 'Checkout' });\n    },\n    deleteItem(itemId) {\n      axios\n        .delete(`${this.baseURL}cart/delete/${itemId}/?token=${this.token} `)\n        .then(\n          (response) => {\n            if (response.status == 200) {\n              this.$router.go(0);\n            }\n            this.$emit('fetchData');\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n    },\n    showDetails(productId) {\n      this.$router.push({\n        name: 'ShowDetails',\n        params: { id: productId },\n      });\n    },\n  },\n  mounted() {\n    this.token = localStorage.getItem('token');\n    this.listCartItems();\n  },\n};\n</script>\n\n<style scoped>\nh4,\nh5 {\n  font-family: 'Roboto', sans-serif;\n  color: #484848;\n  font-weight: 700;\n}\n\n.embed-responsive .card-img-top {\n  object-fit: cover;\n}\n\n#item-price {\n  color: #232f3e;\n}\n\n#item-quantity {\n  float: left;\n}\n\n#item-total-price {\n  float: right;\n}\n\n.confirm {\n  font-weight: bold;\n  font-size: larger;\n}\n@media (max-width : 325px){\n  .d-flex {\n    display:none;\n}\n}\n.d-flex {\n  /* display: -webkit-box!important; */\n  display: -ms-flexbox!important;\n  /* display: flex!important; */\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}