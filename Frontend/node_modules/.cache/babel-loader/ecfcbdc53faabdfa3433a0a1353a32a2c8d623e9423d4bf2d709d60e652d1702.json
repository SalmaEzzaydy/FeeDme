{"ast":null,"code":"export default {\n  name: 'ImageBox',\n  props: [\"image\"],\n  methods: {\n    copyToClipboard() {\n      const image = this.$refs.rimage;\n\n      // new element needs to be created before coping to clipboard\n      const el = document.createElement('textarea');\n      el.value = image.src;\n      el.setAttribute('readonly', '');\n      el.style.position = 'absolute';\n      el.style.left = '-9999px';\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      swal({\n        text: \"Image Address copied to Clipboard!\",\n        icon: \"success\",\n        closeOnClickOutside: false\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAUA,eAAe;EACbA,IAAG,EAAI,UAAU;EACjBC,KAAI,EAAI,CAAC,OAAO,CAAC;EACjBC,OAAM,EAAI;IACRC,eAAe,GAAE;MACf,MAAMC,KAAI,GAAI,IAAI,CAACC,KAAK,CAACC,MAAM;;MAE/B;MACA,MAAMC,EAAC,GAAIC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;MAC7CF,EAAE,CAACG,KAAI,GAAIN,KAAK,CAACO,GAAG;MACpBJ,EAAE,CAACK,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC;MAC/BL,EAAE,CAACM,KAAK,CAACC,QAAO,GAAI,UAAU;MAC9BP,EAAE,CAACM,KAAK,CAACE,IAAG,GAAI,SAAS;MACzBP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,EAAE,CAAC;MAC7BA,EAAE,CAACW,MAAM,EAAE;MACXV,QAAQ,CAACW,WAAW,CAAC,MAAM,CAAC;MAC5BX,QAAQ,CAACQ,IAAI,CAACI,WAAW,CAACb,EAAE,CAAC;MAE7Bc,IAAI,CAAC;QACHC,IAAI,EAAE,oCAAoC;QAC1CC,IAAI,EAAE,SAAS;QACfC,mBAAmB,EAAE;MACvB,CAAC,CAAC;IACJ;EACF;AACF","names":["name","props","methods","copyToClipboard","image","$refs","rimage","el","document","createElement","value","src","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","swal","text","icon","closeOnClickOutside"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\vue\\ecommerce-ui\\src\\components\\Image\\ImageBox.vue"],"sourcesContent":["<template>\n  <div class=\"image-box\">\n    <img :src=\"image.url\" :alt=\"image.name\" class=\"img-fluid my-image\" ref=\"rimage\">\n    <div class=\"middle\">\n      <button class=\"btn btn-info\" @click=\"copyToClipboard\">Copy Address</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name : 'ImageBox',\n  props : [\"image\"],\n  methods : {\n    copyToClipboard(){\n      const image = this.$refs.rimage;\n      \n      // new element needs to be created before coping to clipboard\n      const el = document.createElement('textarea');\n      el.value = image.src;\n      el.setAttribute('readonly', '');\n      el.style.position = 'absolute';\n      el.style.left = '-9999px';\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n\n      swal({\n        text: \"Image Address copied to Clipboard!\",\n        icon: \"success\",\n        closeOnClickOutside: false,\n      });\n    }\n  }\n}\n</script>\n\n<style>\n.image-box{\n  position : relative;\n  width:300px;\n  height:300px;\n  margin:20px;\n}\n\n.image-box img{\n  opacity : 1;\n  width: 100%;\n  height: 100%;\n  transition: .5s ease;\n  backface-visibility: hidden;\n  border-radius: 5px;\n  padding : 5px;\n  border : .5px solid rgb(216, 216, 216);\n}\n\n.middle {\n  transition: .5s ease;\n  opacity: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  -ms-transform: translate(-50%, -50%);\n  text-align: center;\n}\n\n.image-box:hover .my-image {\n  transform: scale(1.1);\n  transition: transform 0.2s ease;\n  opacity: 0.3;\n}\n\n.image-box:hover .middle {\n  opacity: 1;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}