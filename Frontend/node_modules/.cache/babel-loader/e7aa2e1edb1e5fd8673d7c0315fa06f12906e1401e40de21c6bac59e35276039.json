{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"div_class\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"You will be redirected to payment page\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    class: \"checkout_button\",\n    id: \"proceed-to-checkout\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.goToCheckout())\n  }, \" Make payment \")]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAW;gCACpBC,oBAA+C,YAA3C,wCAAsC;;;uBAD5CC,oBASM,OATNC,UASM,GARJC,UAA+C,EAC/CH,oBAMS;IALPD,KAAK,EAAC,iBAAiB;IACvBK,EAAE,EAAC,qBAAqB;IACvBC,OAAK,sCAAEC,qBAAY;KACrB,gBAED","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","id","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\vue\\ecommerce-ui\\src\\views\\Checkout\\Checkout.vue"],"sourcesContent":["<template>\n  <div class=\"div_class\">\n    <h3>You will be redirected to payment page</h3>\n    <button\n      class=\"checkout_button\"\n      id=\"proceed-to-checkout\"\n      @click=\"goToCheckout()\"\n    >\n      Make payment\n    </button>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      stripeAPIToken: process.env.VUE_APP_STRIPETOKEN,\n      stripe: '',\n      token: null,\n      sessionId: null,\n      checkoutBodyArray: [],\n    };\n  },\n\n  name: 'Checkout',\n  props: ['baseURL'],\n  methods: {\n    /*\n      Configures Stripe by setting up the elements and\n      creating the card element.\n    */\n    configureStripe() {},\n\n    getAllItems() {\n      axios.get(`${this.baseURL}cart/?token=${this.token}`).then(\n        (response) => {\n          if (response.status == 200) {\n            let products = response.data;\n            let len = Object.keys(products.cartItems).length;\n            for (let i = 0; i < len; i++)\n              this.checkoutBodyArray.push({\n                imageUrl: products.cartItems[i].product.imageURL,\n                productName: products.cartItems[i].product.name,\n                quantity: products.cartItems[i].quantity,\n                price: products.cartItems[i].product.price,\n                productId: products.cartItems[i].product.id,\n                userId: products.cartItems[i].userId,\n              });\n          }\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    },\n\n    goToCheckout() {\n      axios\n        .post(\n          this.baseURL + 'order/create-checkout-session',\n          this.checkoutBodyArray\n        )\n        .then((response) => {\n          localStorage.setItem('sessionId', response.data.sessionId);\n          return response.data;\n        })\n        .then((session) => {\n          return this.stripe.redirectToCheckout({\n            sessionId: session.sessionId,\n          });\n        });\n    },\n  },\n  mounted() {\n    // get the token\n    this.token = localStorage.getItem('token');\n    // get all the cart items\n    this.stripe = Stripe(this.stripeAPIToken);\n    this.getAllItems();\n  },\n};\n</script>\n\n<style>\n.alert {\n  width: 50%;\n}\n\n.div_class {\n  margin: 0 auto;\n}\n\n.checkout_button {\n  background-color: #5d3dec;\n  border: none;\n  color: white;\n  margin-left: 15%;\n  padding: 15px 30px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 15px;\n  font-weight: bold;\n  border-radius: 15px;\n}\n\n.checkout_button:focus {\n  outline: none;\n  box-shadow: none;\n}\n\n.checkout_button:disabled {\n  background-color: #9b86f7;\n  border: none;\n  color: white;\n  margin-left: 15%;\n  padding: 15px 30px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 15px;\n  font-weight: bold;\n  border-radius: 15px;\n  cursor: not-allowed;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}