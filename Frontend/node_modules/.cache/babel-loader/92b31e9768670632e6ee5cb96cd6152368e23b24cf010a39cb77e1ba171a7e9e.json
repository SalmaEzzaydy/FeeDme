{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"image-box\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = {\n  class: \"middle\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    src: $props.image.url,\n    alt: $props.image.name,\n    class: \"img-fluid my-image\",\n    ref: \"rimage\"\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    class: \"btn btn-info\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.copyToClipboard && $options.copyToClipboard(...args))\n  }, \"Copy Address\")])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAW;;;EAEfA,KAAK,EAAC;AAAQ;;uBAFrBC,oBAKM,OALNC,UAKM,GAJJC,oBAAgF;IAA1EC,GAAG,EAAEC,YAAK,CAACC,GAAG;IAAGC,GAAG,EAAEF,YAAK,CAACG,IAAI;IAAER,KAAK,EAAC,oBAAoB;IAACS,GAAG,EAAC;uCACvEN,oBAEM,OAFNO,UAEM,GADJP,oBAA2E;IAAnEH,KAAK,EAAC,cAAc;IAAEW,OAAK,yCAAEC,6DAAe;KAAE,cAAY","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","src","$props","url","alt","name","ref","_hoisted_3","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\vue\\ecommerce-ui\\src\\components\\Image\\ImageBox.vue"],"sourcesContent":["<template>\n  <div class=\"image-box\">\n    <img :src=\"image.url\" :alt=\"image.name\" class=\"img-fluid my-image\" ref=\"rimage\">\n    <div class=\"middle\">\n      <button class=\"btn btn-info\" @click=\"copyToClipboard\">Copy Address</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name : 'ImageBox',\n  props : [\"image\"],\n  methods : {\n    copyToClipboard(){\n      const image = this.$refs.rimage;\n      \n      // new element needs to be created before coping to clipboard\n      const el = document.createElement('textarea');\n      el.value = image.src;\n      el.setAttribute('readonly', '');\n      el.style.position = 'absolute';\n      el.style.left = '-9999px';\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n\n      swal({\n        text: \"Image Address copied to Clipboard!\",\n        icon: \"success\",\n        closeOnClickOutside: false,\n      });\n    }\n  }\n}\n</script>\n\n<style>\n.image-box{\n  position : relative;\n  width:300px;\n  height:300px;\n  margin:20px;\n}\n\n.image-box img{\n  opacity : 1;\n  width: 100%;\n  height: 100%;\n  transition: .5s ease;\n  backface-visibility: hidden;\n  border-radius: 5px;\n  padding : 5px;\n  border : .5px solid rgb(216, 216, 216);\n}\n\n.middle {\n  transition: .5s ease;\n  opacity: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  -ms-transform: translate(-50%, -50%);\n  text-align: center;\n}\n\n.image-box:hover .my-image {\n  transform: scale(1.1);\n  transition: transform 0.2s ease;\n  opacity: 0.3;\n}\n\n.image-box:hover .middle {\n  opacity: 1;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}